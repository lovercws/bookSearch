<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-lazy-init="false">

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:properties/*.properties" />
	<!-- <context:property-placeholder location="classpath:properties/jedis.properties" /> -->

	<!-- 配置一个mysql c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${mysql.driverClassName}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="user" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="${mysql.maxPoolSize}" />
		<!-- 连接池中保留的最小连接数，默认为：3 -->
		<property name="minPoolSize" value="${mysql.minPoolSize}" />
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
		<property name="initialPoolSize" value="${mysql.initialPoolSize}" />
		<!--最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
		<property name="maxIdleTime" value="${mysql.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候kingbase一次同时获取的连接数。默认值: 3 -->
		<property name="acquireIncrement" value="${mysql.acquireIncrement}" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
		<property name="acquireRetryAttempts" value="${mysql.acquireRetryAttempts}" />
		<!--重新尝试的时间间隔，默认为：1000毫秒 -->
		<property name="acquireRetryDelay" value="${mysql.acquireRetryDelay}" />
		<!--如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: 
			false -->
		<property name="breakAfterAcquireFailure" value="false" />
		
	</bean>

	<!--定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${mysql.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<!-- 配置二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 查询的缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 配置二级缓存的相应的类 -->
				<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache/ehcache.xml</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- 连接释放 -->
				<prop key="hibernate.connection.release_mode">after_transaction</prop>

				<!-- 指定Proxool的alias，必须与Proxool的配置文件中的alias一致 -->
				<!-- <prop key="hibernate.proxool.pool_alias">data</prop> -->
				<!-- 指定Proxool配置文件 -->
				<!-- <prop key="hibernate.proxool.xml">configs/spring/proxool.xml</prop> -->
				<!-- 配置连接池 -->
				<!-- <prop key="hibernate.connection.provider_class">org.hibernate.connection.ProxoolConnectionProvider</prop> -->
			</props>
		</property>
		
		<!-- 定义的mappingresource -->
		<property name="mappingResources">
			<list>
				<value>com/kingbase/bookSearch/system/bean/Menu.hbm.xml</value>
				<value>com/kingbase/bookSearch/system/bean/Role.hbm.xml</value>
				<value>com/kingbase/bookSearch/system/bean/RoleMenu.hbm.xml</value>
				<value>com/kingbase/bookSearch/system/bean/User.hbm.xml</value>
				<value>com/kingbase/bookSearch/system/bean/UserRole.hbm.xml</value>
				<value>com/kingbase/bookSearch/ddl/bean/SexDDL.hbm.xml</value>
			</list>
		</property>
		
		<!-- 指定开启查询缓存的类 -->
		<!-- 注意这里设置的read-only 只有当这个数据字典不在需要修改的时候 才设置为read-only read-write 当用户在开发的阶段 
			需要设置为read-write 否则的话 总会出现 Can't write to a readonly object -->

	</bean>

	<!-- 定义的hibernate模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
</beans>    